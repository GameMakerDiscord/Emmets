<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprites = array(sprite_fx_landslide_nw, sprite_fx_landslide_sw, sprite_fx_landslide_ne, sprite_fx_landslide_se);
side = noone; /// 
wallCheck = array(noone, noone);

color = getWorld(global.currentCave[? CAVE_WORLD], WORLD_COLOR);
animIndex = 0;
animSpeed = 20;

depth = LAYER_LOW-1;
playSfx(sound_sfx_rockslide, true, id, true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (side == noone){
    if (wallCheck[0] == noone){
        wallCheck = array(floor(x/G_CELLSIZE), floor(y/G_CELLSIZE));
    }
    var ix = wallCheck[0];
    var iy = wallCheck[1];
    ///Decision of side depending on what's around the wall
    if (wallExists(array(ix-1, iy))){
        side = 3;
    }
    else if (wallExists(array(ix, iy-1))){
        side = 1;
    }
    else if (wallExists(array(ix+1, iy))){
        side = 0;
    }
    else if (wallExists(array(ix, iy+1))){
        side = 2;
    }
    else{
        side = 2;
    }
}
else{
    animIndex += animSpeed/room_speed;
    if (animIndex &gt; sprite_get_number(sprites[side])-1){
        instance_destroy();
        exit;
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (side &gt; noone){
    draw_sprite_ext(sprites[side], floor(animIndex), sysToDisplayX(x,y), sysToDisplayY(x,y), 1, 1, 0, color, 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
