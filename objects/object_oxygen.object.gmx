<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite_oxygen</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>unique();

oxygenMax = 15000;
oxygen = oxygenMax-1;
oldOxygen = oxygen;

time = 0;

oxygenWarning = 0.05;
warningTimer = 0;
warned = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// RESET OXYGEN IF OUT OF GAME
if (!object_game.inGame || notAGameRoom(room)){
    oxygen = oxygenMax-1;
    exit;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///EXIT IF PAUSED
if (object_game.paused){
    exit;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>oldOxygen = oxygen;
if (oxygen &gt; 0){
    //Emmets breathe
    for (var i = 0; i &lt; instance_number(object_emmet); i++){
        var thisE = instance_find(object_emmet, i);
        if (thisE.dead){
            break;
        }
        var oxyCost = 0.6;
        if (instance_exists(thisE.holding)){
            oxyCost /= thisE.holding.weightFactor;
        }
        oxyCost = clamp(oxyCost, 0, 3); /// Safety
        oxygen -= (1/room_speed)*oxyCost*getRule(RULE_OXYGEN);
    }
    
    //General air loss
    oxygen -= (1/room_speed)*getRule(RULE_OXYGEN)*10;
}
else{
    /// Emmets suffer
    time += 1/room_speed;
    if (time &gt; 1){
        for (var i = 0; i &lt; instance_number(object_emmet); i++){
            var emmet = instance_find(object_emmet, i);
            if (!emmet.dead &amp;&amp; !emmet.arriving){
                hurtEmmet(emmet, 1);
            }   
        }
        time = 0;
    }
}

if (oxygen/oxygenMax &lt; oxygenWarning){
    if (!warned){
        warnTip(translate("WARNING", "oxygen"));
        if (!checkMarker("oxygen")){
            createWindow(
                translate("GENERAL_UI", "notice"),
                translate("MARKERS", "oxygen")
                );
            validateMarker("oxygen");
        }
        warned = true;
    }
    warningTimer += 1/room_speed;
    if (warningTimer &gt; 1){
        warningTimer = 0;
        playSfx(sound_sfx_heartbeat);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
