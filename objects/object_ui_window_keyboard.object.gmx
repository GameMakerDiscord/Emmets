<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite_headband</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>object_set_persistent(object_ui_window, true);
hostWindow = createWindow(translate("GENERAL_UI", "visualKeyboard"), "", array(noone), true);
object_set_persistent(object_ui_window, false);
hostWindow.width = SCREEN_WIDTH-UI_LEFT_BAND-UI_RIGHT_BAND;
hostWindow.height = SCREEN_HEIGHT/3;
hostWindow.x = (SCREEN_WIDTH-hostWindow.width)/2;
hostWindow.y = SCREEN_HEIGHT-hostWindow.height;
hostWindow.autoCenter = false;
hostWindow.depth = CURSOR_DEPTH+1;
hostWindow.drawCheckerboard = false;
object_game.menuing = hostWindow.wasMenuing;

depth = hostWindow.depth-1;

x = hostWindow.x+UI_LEFT_BAND;
y = hostWindow.y+UI_TOP_BAND;

width = hostWindow.width - UI_RIGHT_BAND - UI_LEFT_BAND;
height = hostWindow.height - UI_TOP_BAND - UI_LEFT_BAND;

keyString = "azertyuiopqsdfghjklmwxcvbn";

rows = 3;
spacebarHeight = 32;
keySpacing = 3;

hovered = "";

keyboard_string = "";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hostWindow.x = view_xview;
hostWindow.y = view_yview+view_hview-hostWindow.height;

x = hostWindow.x+UI_LEFT_BAND;
y = hostWindow.y+UI_TOP_BAND;

var keyboardHeight = height-spacebarHeight-keySpacing*2 - keySpacing*rows;
var keyboardWidth = (width-keySpacing*2);
var keysPerRow = round(string_length(keyString)/rows);

hovered = "";
for (var i = 0; i &lt; string_length(keyString); i++){
    var row = floor((i/(string_length(keyString)))*rows)
    var ySize = keyboardHeight/rows;
    var xSize = keyboardWidth/keysPerRow;
    
    var keyPos = array(x+keySpacing+(i%keysPerRow)*xSize, y+row*ySize+keySpacing);
    var block = array(keyPos[0]+keySpacing, keyPos[1]+keySpacing, keyPos[0]+xSize-keySpacing, keyPos[1]+ySize-keySpacing);
    
    var char = string_char_at(keyString, i+1);
    if (gamepad_button_check(0, gp_shoulderr)){
        char = string_upper(char);
    }
    
    if (mouseIn(block)){
        hovered = char;
        if (global.i[I_SELECT]){
            keyboard_string = char;
        }
    }
}

var spacebarPosY = height-spacebarHeight-keySpacing;
var spaceBlock = array(x+keySpacing*4, y+spacebarPosY, x+width-keySpacing*4, y+spacebarPosY+spacebarHeight);

if (mouseIn(spaceBlock)){
    hovered = " ";
    if (global.i[I_SELECT]){
        keyboard_string = " ";
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(font_ui);
draw_set_valign(fa_top);
draw_set_halign(fa_center);


colors = 
        array(COLOR_FOREGROUND(),
                COLOR_BACKGROUND(), 
                COLOR_SHADOW());
hoveredColors = 
        array(COLOR_BACKGROUND(),
                COLOR_FOREGROUND(), 
                COLOR_SHADOW());

var keyboardHeight = height-spacebarHeight-keySpacing*2 - keySpacing*rows;
var keyboardWidth = (width-keySpacing*2);
var keysPerRow = round(string_length(keyString)/rows);

for (var i = 0; i &lt; string_length(keyString); i++){
    var row = floor((i/(string_length(keyString)))*rows)
    var ySize = keyboardHeight/rows;
    var xSize = keyboardWidth/keysPerRow;
    
    var keyPos = array(x+keySpacing+(i%keysPerRow)*xSize, y+row*ySize+keySpacing);
    var block = array(keyPos[0]+keySpacing, keyPos[1]+keySpacing, keyPos[0]+xSize-keySpacing, keyPos[1]+ySize-keySpacing);
    
    draw_set_valign(fa_middle);
    draw_set_halign(fa_center);
    draw_set_font(font_ui_big);
    
    var theseColors = colors;
    var char = string_char_at(keyString, i+1);
    if (gamepad_button_check(0, gp_shoulderr)){
        char = string_upper(char);
    }
    
    if (char == hovered){
        theseColors = hoveredColors;
    }
    
    drawBlock(block, theseColors);
    drawShadowedText(
        floormean(keyPos[0], keyPos[0]+xSize), 
        floormean(keyPos[1], keyPos[1]+ySize),
        char,
        theseColors
    );
}

var spacebarPosY = height-spacebarHeight-keySpacing;
var spaceBlock = array(x+keySpacing*4, y+spacebarPosY, x+width-keySpacing*4, y+spacebarPosY+spacebarHeight);

var theseColors = colors;
if (hovered == " "){
    theseColors = hoveredColors;
}

drawBlock(spaceBlock, theseColors);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
