<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite_emmetselector</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>createDebugWindow("(no target)", 140, 240);
depth = hostWindow.depth-1;

x = hostWindow.x+UI_LEFT_BAND;
y = hostWindow.y+UI_TOP_BAND;

width = hostWindow.width - UI_RIGHT_BAND - UI_LEFT_BAND;
height = hostWindow.height - UI_TOP_BAND - UI_LEFT_BAND;

textPos = array(floor(x+width/2), floor(y+height/4));
barPos = array(floor(x+width/2), floor(y+height/2));

text = '';
target = noone;
state = "";
timers = ds_map_logcreate();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_map_logdestroy(timers);
if (instance_exists(hostWindow)){
    instance_destroy(hostWindow);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!instance_exists(hostWindow)){
    createDebugWindow(string(target.id), 140, 240);
}
else{
    hostWindow.title = string(target.id);
}
draw_set_font(font_ui);

x = hostWindow.x+UI_LEFT_BAND;
y = hostWindow.y+UI_TOP_BAND;


textPos = array(floor(x+width/2), y+hostWindow.interiorPadding);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Clear text
text = "";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(font_ui);
draw_set_valign(fa_top);
draw_set_halign(fa_center);
var colors = array(noone);
array_copy(colors, 0, hostWindow.colors, 0, array_length_1d(hostWindow.colors));

if (ds_map_size(timers) &gt; 0){
    var key = ds_map_find_first(timers);
    for (var i = 0; i &lt; ds_map_size(timers); i++){
        text = key+": "+string(timers[? key])+"#" + text;
        key = ds_map_find_next(timers, key);
    }

}
drawShadowedText(textPos[0], textPos[1], text, colors, width-UI_LEFT_BAND*2);

if (instance_exists(target)){
    draw_sprite(sprite_humorbg, 0, x+UI_LEFT_BAND+hostWindow.interiorPadding, y+UI_TOP_BAND+hostWindow.interiorPadding);
    draw_sprite(sprite_humors, target.humor, x+UI_LEFT_BAND+hostWindow.interiorPadding, y+UI_TOP_BAND+hostWindow.interiorPadding);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
