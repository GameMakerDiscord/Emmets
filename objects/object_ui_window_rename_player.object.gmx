<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite_menu_poweraward</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>unique();

hostWindow = createWindow(translate("MANAGE_CREW", "name"), "", array(noone), true);
hostWindow.width = 320;
hostWindow.height = 120;
hostWindow.x = (SCREEN_WIDTH-hostWindow.width)/2;
hostWindow.y = (SCREEN_HEIGHT-hostWindow.height)/2;

depth = hostWindow.depth-1;
connectionTimer = 2;

buttonZoneHeight = 28;

x = hostWindow.x+UI_LEFT_BAND;
y = hostWindow.y+UI_TOP_BAND;

width = hostWindow.width - UI_RIGHT_BAND - UI_LEFT_BAND;
height = hostWindow.height - UI_TOP_BAND - UI_LEFT_BAND;

textPos = array(floor(x+width/2), floor(y+height/4));
barPos = array(floor(x+width/2), floor(y+height/2));

animSpeed = 8;
animStrip = "-\|/";

nameContent = object_game.player[? "name"];
hoveredOk = false;
buttonWidth= 96;

okBlock = array(noone, noone, noone, noone);
deleteTime = 0;
deleteSpeed = 20;

waitingForNetwork = 0;
receivedToken = '';
connectionFailed = false;
loadingWindow = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var vx = view_xview;
var vy = view_yview;

var top = vy+y+hostWindow.interiorPadding;
var left = vx+x;
var right = vx+x+width;
var bottom = vy+y+height;

// Network check

if (!object_game.offlineMode){
    if (connectionFailed){
        if (instance_exists(loadingWindow)){
            loadingWindow.die = true;
        }
        waitingForNetwork = 0;
        connectionFailed = false;
        playSfx(sound_sfx_notice);
        createWindow(translate("GENERAL_UI", "notice"), translate("GENERAL_UI",  "offlineCannotConnect"));
    }
    else if (string_length(receivedToken) &gt; 0){
        if (instance_exists(loadingWindow)){
            loadingWindow.die = true;
        }
        object_game.player[? "name"] = nameContent;
        object_game.player[? "token"] = receivedToken;
        savePersonal();
        playSfx(sound_sfx_crowd_cheer);
        closeWindow(hostWindow);
        closeWindow(id);
        createWindow(translate("GENERAL_UI", "notice"), string_replace(translate("GENERAL_UI",  "successfulConnection"), "%s", nameContent));
    }
    else if (waitingForNetwork &gt; 0){
        waitingForNetwork -= 1/room_speed;
        if (waitingForNetwork &lt;= 0){
            connectionFailed = true;
        }
    }
}

// Endof

okBlock = array(mean(left, right) - buttonWidth/2, bottom-buttonZoneHeight, mean(left, right) + buttonWidth/2, bottom);

if (mouseIn(okBlock) &amp;&amp; string_length(nameContent) &gt; 0){
    hoveredOk = true;
}
else{
    hoveredOk = false;
}
if ((keyboard_check_pressed(vk_enter) || (hoveredOk &amp;&amp; global.i[I_SELECT]))  &amp;&amp; string_length(nameContent) &gt; 0){
    playSfx(sound_sfx_select);
    if (!object_game.offlineMode &amp;&amp; string_length(nameContent) == 64){ /// It's a token!
        onlineCheckToken(nameContent);
        waitingForNetwork = 4;
        loadingWindow = instance_create(0,0, object_ui_window_loading);
    }
    else{
        object_game.player[? "name"] = nameContent;
        object_game.player[? "token"] = object_game.player[? "name"];
        if (object_station.companyLoaded){
            object_station.company[? "owner"] = nameContent;
        }
        savePersonal();
        closeWindow(hostWindow);
        closeWindow(id);
    }
}
else if (string_length(keyboard_string) &gt; 0){
    keyboard_string = string_filter(keyboard_string, '~$*^,;#&lt;&gt;`"');
    if (string_length(nameContent) &lt; 24){
        nameContent += keyboard_string;
    }
    keyboard_string = "";
    playSfx(sound_sfx_typewriter);
}
else if (keyboard_check(vk_backspace) || keyboard_check_pressed(vk_backspace)
    || gamepad_button_check(0, object_pad.xpad_map[I_ACTION]) || gamepad_button_check_pressed(0, object_pad.xpad_map[I_ACTION])
){
    deleteTime+= deleteSpeed/room_speed;
    if (keyboard_check_pressed(vk_backspace)
    || gamepad_button_check_pressed(0, object_pad.xpad_map[I_ACTION])
){
        nameContent = string_delete(nameContent, string_length(nameContent), 1);
        deleteTime = -4;
    }
    if (deleteTime &gt;= 1){
        nameContent = string_delete(nameContent, string_length(nameContent), 1);
        deleteTime = 0;
    }
}
else if (keyboard_check_pressed(vk_control) &amp;&amp; !object_game.offlineMode){
    nameContent = string_filter(clipboard_get_text(), '~$*^,;#&lt;&gt;`"');
    playSfx(sound_sfx_geoping);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(font_ui);
draw_set_valign(fa_top);

var vx = view_xview;
var vy = view_yview;

var top = vy+y+hostWindow.interiorPadding;
var left = vx+x;
var right = vx+x+width;
var bottom = vy+y+height;

draw_set_font(font_ui);

var lineHeight = string_height("A")+8;
var pos = array(left+hostWindow.interiorPadding, top+lineHeight, right-hostWindow.interiorPadding, top+lineHeight+buttonZoneHeight);

draw_set_valign(fa_middle);
draw_set_halign(fa_left);

drawShadowedText(left+hostWindow.interiorPadding, top, string_replace(translate("MANAGE_CREW", "enterNewName"), "%s", object_game.player[? "name"]), hostWindow.colors);
if (!object_game.offlineMode){
    var th = string_height("A");
    draw_set_font(font_tiniest);
    drawShadowedText(left+hostWindow.interiorPadding, top+th+2, translate("OPTIONS", "ctrlToPaste"), hostWindow.colors);
    draw_set_font(font_ui);
}

var surf = surface_create(pos[2]-pos[0], pos[3]-pos[1]);
if (surface_exists(surf)){
    surface_set_target(surf);
    drawBlock(array(0,0,pos[2]-pos[0], pos[3]-pos[1]), hostWindow.colors);
    drawShadowedText(hostWindow.textInteriorPadding, floormean(0, pos[3]-pos[1]), nameContent);
    surface_reset_target();
    draw_surface(surf, pos[0], pos[1]);
    surface_free(surf);
}

draw_set_halign(fa_center);
var myColors = hostWindow.colors;
if (hoveredOk){
    myColors = hostWindow.hoveredColors;
}
if (string_length(string_lettersdigits(nameContent)) &gt; 0){
    drawBlock(okBlock, myColors);
    drawShadowedText(floormean(okBlock[0], okBlock[2]), floormean(okBlock[1], okBlock[3]), translate("GENERAL_UI", "confirm"));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
