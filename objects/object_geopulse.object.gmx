<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>radius = 512;
totalAngle = 360;
offset = get_timer()/20000;
distance = 0;
dots = 24;
pulses = 16;

duration = 2;
timer = 0;
alpha = 1;

color = 0;
lootDetector = false;

if (!getSetting("disableGeoping")) playSfx(sound_sfx_geoping, false, id);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// EXIT IF PAUSED OR NOT INGAME

if (!object_game.inGame || object_game.paused){
    exit;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>offset = get_timer()/20000;
timer += 1/room_speed;
alpha = 1 - timer/duration;
distance = timer/duration;

if (timer &gt; duration){
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var vx = view_xview;
var vy = view_yview;
for (var i = 0; i &lt; dots; i++){
    var angle = (i/dots)*totalAngle;
    var dx = sysToDisplayX(x, y);
    var dy = sysToDisplayY(x, y);
    
    var dot = array(
                dx + radius * cos((-angle+offset)*pi/180) * distance,
                dy + radius * sin((-angle+offset)*pi/180) * (distance/2)
                );
                
    draw_set_alpha(alpha);
    draw_set_color(c_lime);
    draw_point(dot[0], dot[1]);
    draw_set_alpha(1.0);
    
    if (lootDetector){
        var pos = getIsoIndex(displayToSys(dot));
       // colorChunk(pos,c_fuchsia, 0.3);
        if (isInGrid(pos) &amp;&amp; wallExists(pos) &amp;&amp; global.terrain_walls[# pos[0], pos[1]] != TERRAIN_WALL_UNBREAKABLE){
            var loot = ds_grid_get(global.terrain_loot, pos[0], pos[1]);
            if (!is_undefined(loot) &amp;&amp; !ds_exists(loot, ds_type_map)){
                continue;
            }
            var frscs = getFancyMaterials();
            for (var j =0; j &lt; array_length_1d(frscs); j++){
                var rsc = frscs[j];
                if (!is_undefined(loot[? rsc])){
                    if (!onChunk(pos, object_fx_chunk_painter)){
                        spawnChunkPainter(pos, getRessource(rsc, "color"), 0.3);
                    }
                    break;
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
