<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite_gravelman</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>unique();
gravelObjectives = ds_list_create();


gravelGrid = ds_grid_create(object_game.gridSize[0], object_game.gridSize[1]);
blink = 0;
gravelToBlink = array(0,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!object_game.inGame){
    exit;
}

for (var i = 0; i &lt; ds_list_size(gravelObjectives); i++){
    var gravel = ds_list_find_value(gravelObjectives,i);
    gravel = ds_grid_get(gravelGrid, gravel[0], gravel[1]);
    if (gravel == noone || is_undefined(gravel) || gravel == false){
        ds_list_delete(gravelObjectives, i);
        continue;
    }
}
/*
///for debug only
for (var i = 0; i &lt; ds_grid_width(gravelGrid); i++){
    for (var j = 0; j &lt; ds_grid_height(gravelGrid); j++){
        if (ds_grid_get(gravelGrid, i, j)){
            debugChunk(array(i,j));
        }
    }
}
//endof
*/
if (global.i[I_SELECT]){
    if (isSelectedGravel(object_gridman.cursorIsoIndex)){
        groundmod_set_colour(object_gridman.cursorIsoIndex, selectionColor(30));
    }
    else if (isMarkedToClear(object_gridman.cursorIsoIndex)){
        groundmod_set_colour(object_gridman.cursorIsoIndex, c_gray);
    }
    
}

if (blink &gt; 0 &amp;&amp; getGravel(gravelToBlink) &gt;= 0){
    groundmod_set_colour(gravelToBlink, c_white);
    blink-= 1/room_speed;
    if (round((blink/0.3)%1) == 0){
        groundmod_set_colour(gravelToBlink, c_gray);
    }
}
else{
    blink = 0;
    groundmod_set_colour(gravelToBlink, c_white);
    gravelToBlink = array(0,0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///do not draw
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
